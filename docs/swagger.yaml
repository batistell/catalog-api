basePath: /
definitions:
  model.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  model.Product:
    properties:
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: number
    type: object
  model.ProductResponse:
    properties:
      data:
        $ref: '#/definitions/model.Product'
      message:
        type: string
    type: object
info:
  contact:
    email: batistell.labs@gmail.com
    name: API Support
  description: API for Managing Products from Catalog.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Catalog API
  version: "1.0"
paths:
  /add:
    post:
      consumes:
        - application/json
      description: Add a new product to the catalog
      parameters:
        - description: Product object to add
          in: body
          name: product
          required: true
          schema:
            $ref: '#/definitions/model.Product'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ProductResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Add a new product
      tags:
        - Products
  /products:
    get:
      description: Retrieve all products from the catalog
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Product'
            type: array
      summary: Get all products
      tags:
        - Products
  /products/{id}:
    delete:
      description: Delete a product from the catalog by its ID
      parameters:
        - description: Product ID
          in: path
          name: id
          required: true
          type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Delete a product
      tags:
        - Products
    get:
      description: Retrieve a product from the catalog by its ID
      parameters:
        - description: Product ID
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Product'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Get product by ID
      tags:
        - Products
    put:
      consumes:
        - application/json
      description: Update a product in the catalog
      parameters:
        - description: Product ID
          in: path
          name: id
          required: true
          type: integer
        - description: Updated product object
          in: body
          name: product
          required: true
          schema:
            $ref: '#/definitions/model.Product'
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ProductResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Update a product
      tags:
        - Products
swagger: "2.0"
